FROM <%= options.variant %> as base

WORKDIR /tmp/workdir

RUN set -e ; \
<%= case options.variant 
    when /ubuntu/, /debian/ then 
        %q{
apt-get update -yqq ; \
apt-get install -yqq --no-install-recommends ca-certificates expat libgomp1 libfreetype6 libfribidi0 fontconfig ; \
apt-get autoremove -y ; \
apt-get clean -y
        }.strip
    when /alpine/ then
        %{
apk add --no-cache --update libgcc libstdc++ ca-certificates libcrypto1.0 libssl1.0 libgomp expat freetype fontconfig fribidi 
        }.strip
    when /centos/ then
        %q{
yum -y install libgomp libssh freetype fontconfig fribidi ; \
yum clean all
        }.strip
end %>

FROM base AS build

ARG PKG_CONFIG_PATH='/opt/ffmpeg/lib/pkgconfig'
ARG LD_LIBRARY_PATH='/opt/ffmpeg/lib'
ARG PREFIX='/opt/ffmpeg'
ARG MAKEFLAGS='-j2'

ENV FFMPEG_VERSION=<%= options.ffmpeg_version %> \
	FFMPEG_GPG=FCF986EA15E6E293A5644F10B4322F04D67658D8 \
	    SRC=/usr/local

RUN set -e ;\
<%= case options.variant 
    when /ubuntu/, /debian/ then 
        %q{
apt-get update -yqq ;\
apt-get install -yqq --no-install-recommends \
autoconf \
automake \
bzip2 \
cmake \
curl \
dirmngr \
g++ \
gcc \
git \
gnupg2 \
gperf \
libexpat1-dev \
libfontconfig1-dev \
libfreetype6-dev \
libfribidi-dev \
libssl-dev \
libtool \
make \
nasm \
perl \
pkg-config \
python \
yasm \
zlib1g-dev
        }.strip
    when /alpine/ then
        %{
apk add --no-cache --update \
autoconf \
automake \
binutils \
bzip2 \
cmake \
curl \
coreutils \
expat-dev \
file \
fontconfig-dev \
freetype-dev \
fribidi-dev \
g++ \
gcc \
gnupg \
gperf \
libtool \
make \
nasm \
openssl-dev \
python \
tar \
yasm \
zlib-dev
		}.strip
    when /centos/ then
        %{
yum --enablerepo=extras install -y epel-release ; \
yum groupinstall "Development tools" -y ; \
yum install -y \
bzip2 \
cmake \
expat-devel \
freetype-devel \
fribidi-devel \
fontconfig-devel \
openssl-devel \
libssh-devel \
tar \
yasm \
which \
zlib-devel
        }.strip
end %>

<% if options.ogg %>
ARG OGG_SHA256SUM=<%= options.ogg_sha256sum %>
ARG OGG_VERSION=<%= options.ogg_version %>
RUN set -e; \
dir=/tmp/ogg ; \
mkdir -p ${dir} ; \
cd ${dir} ; \
<%= deps["ogg"]["buildscript"].strip %> ; \
rm -rf ${dir} 
<% end %>

<% if options.opencoreamr %>
ARG OPENCOREAMR_SHA1SUM=<%= options.opencoreamr_sha1sum %>
ARG OPENCOREAMR_VERSION=<%= options.opencoreamr_version %> 
RUN set -e; \
dir=/tmp/opencore-amr ; \
mkdir -p ${dir} ; \
cd ${dir} ; \
<%= deps["opencoreamr"]["buildscript"].strip %> ; \
rm -rf ${dir} 
<% end %>

<% if options.opus %>
ARG OPUS_SHA256SUM=<%= options.opus_sha256sum %>
ARG OPUS_VERSION=<%= options.opus_version %>
RUN set -e; \
dir=/tmp/opus ; \
mkdir -p ${dir} ; \
cd ${dir} ; \
<%= deps["opus"]["buildscript"].strip %> ; \
rm -rf ${dir} 
<% end %>

<% if options.x264 %>
ARG X264_VERSION=<%= options.x264_version %>
RUN set -e ;\
dir=/tmp/x264 ;\
mkdir -p ${dir} ;\
cd ${dir} ;\
<%= deps["x264"]["buildscript"].strip %> ; \
rm -rf ${dir}
<% end %>

<% if options.x265 %>
ARG X265_MD5SUM=<%= options.x265_md5sum %>
ARG X265_VERSION=<%= options.x265_version %>
RUN set -e; \
dir=/tmp/x265 ; \
mkdir -p ${dir} ; \
<%= deps["x265"]["buildscript"].strip %> ; \
rm -rf ${dir}
<% end %>

<% if options.openjpeg %>
ARG OPENJPEG_VERSION=<%= options.openjpeg_version %>
RUN set -e; \
dir=/tmp/openjpeg ; \
mkdir -p ${dir} ; \
cd ${dir} ; \
<%= deps["openjpeg"]["buildscript"].strip %> ; \
rm -rf ${dir}
<% end %>

<% if options.fdkaac %>
ARG FDKAAC_VERSION=<%= options.fdkaac_version %>
RUN set -e; \
dir=/tmp/fdkaac ; \
mkdir -p ${dir} ; \
cd ${dir} ; \
<%= deps["fdkaac"]["buildscript"].strip %> ; \
rm -rf ${dir}
<% end %>

<% if options.lame %>	
ARG LAME_VERSION=<%= options.lame_version %>
RUN set -e; \
dir=/tmp/lame ; \
mkdir -p ${dir} ; \
cd ${dir} ; \
<%= deps["lame"]["buildscript"].strip %> ; \
rm -rf ${dir}
<% end %>

<% if options.ass %>
ARG ASS_SHA256SUM=<%= options.ass_sha256sum %>
ARG ASS_VERSION=<%= options.ass_version %>
RUN set -e; \
dir=/tmp/ass ; \
mkdir -p ${dir} ; \
cd ${dir} ; \
<%= deps["ass"]["buildscript"].strip %> ; \
rm -rf ${dir}
<% end %>

<% if options.theora %>    
ARG THEORA_SHA256SUM=<%= options.theora_sha256sum %>
ARG THEORA_VERSION=<%= options.theora_version %>
RUN set -e; \
dir=/tmp/theora ; \
mkdir -p ${dir} ; \
cd ${dir} ; \
<%= deps["theora"]["buildscript"].strip %> ; \
rm -rf ${dir}
<% end %>

<% if options.vorbis %>    
ARG VORBIS_SHA256SUM=<%= options.vorbis_sha256sum %>
ARG VORBIS_VERSION=<%= options.vorbis_version %>
RUN set -e; \
dir=/tmp/vorbis ; \
mkdir -p ${dir} ; \
cd ${dir} ; \
<%= deps["vorbis"]["buildscript"].strip %> ; \
rm -rf ${dir}
<% end %>

<% if options.vpx %>	
ARG VPX_VERSION=<%= options.vpx_version %>
RUN set -e; \
dir=/tmp/vpx ; \
mkdir -p ${dir} ; \
cd ${dir} ; \
<%= deps["vpx"]["buildscript"].strip %> ; \
rm -rf ${dir}
<% end %>

<% if options.xvid %>    
ARG XVID_SHA256SUM=<%= options.xvid_sha256sum %>
ARG XVID_VERSION=<%= options.xvid_version %>
RUN set -e; \
dir=/tmp/xvid ; \
mkdir -p ${dir} ; \
cd ${dir} ; \
<%= deps["xvid"]["buildscript"].strip %> ; \
rm -rf ${dir}
<% end %>

<% if options.vidstab %>
ARG VIDSTAB_SHA256SUM=<%= options.vidstab_sha256sum %>
ARG VIDSTAB_VERSION=<%= options.vidstab_version %>
RUN set -e; \
dir=/tmp/vidstab ; \
mkdir -p ${dir} ; \
cd ${dir} ; \
<%= deps["vidstab"]["buildscript"].strip %> ; \
rm -rf ${dir}
<% end %>

<% if options.kvazaar %>
ARG KVAZAAR_VERSION=<%= options.kvazaar_version %>
RUN set -e; \
dir=/tmp/kvazaar ; \
mkdir -p ${dir} ; \
cd ${dir} ; \
<%= deps["kvazaar"]["buildscript"].strip %> ; \
rm -rf ${dir}
<% end %>

RUN  set -e ;\
dir=$(mktemp -d) ;\
cd ${dir} ; \
curl -sLO https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.gz ; \
curl -sLO https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.gz.asc ; \
gpg --batch --keyserver ipv4.pool.sks-keyservers.net --recv-keys ${FFMPEG_GPG}; \
gpg --batch --verify ffmpeg-<%= options.ffmpeg_version %>.tar.gz.asc ffmpeg-${FFMPEG_VERSION}.tar.gz ; \
tar -zx --strip-components=1 -f ffmpeg-${FFMPEG_VERSION}.tar.gz ; \
./configure \
--disable-debug \
--disable-doc \
--disable-ffplay \
--enable-shared \
--enable-avresample \
--enable-gpl \
--enable-nonfree \
--enable-postproc \
--enable-small \
--enable-version3 \
--enable-libfreetype \
<%= "--enable-libopencore-amrnb --enable-libopencore-amrwb" if options.opencoreamr %> \
<%= "--enable-libopus" if options.opus %> \
<%= "--enable-libx264" if options.x264 %> \
<%= "--enable-libx265" if options.x265 %> \
<%= "--enable-libass" if options.ass %> \
<%= "--enable-libvidstab" if options.vidstab %> \
<%= "--enable-libmp3lame" if options.lame %> \
<%= "--enable-libopenjpeg" if options.openjpeg %> \
<%= "--enable-libtheora" if options.theora %> \
<%= "--enable-libvorbis" if options.vorbis %> \
<%= "--enable-libvpx" if options.vpx %> \
<%= "--enable-libxvid" if options.xvid %> \
<%= "--enable-libfdk_aac" if options.fdkaac %> \
<%= "--enable-libkvazaar" if options.kvazaar %> \
--extra-cflags="-I${PREFIX}/include" \
--extra-ldflags="-L${PREFIX}/lib" \
--extra-libs=-ldl \
--prefix="${PREFIX}" ; \
make ; \
make install ; \
make distclean ; \
hash -r ; \
cd tools ; \
make qt-faststart ; \
cp qt-faststart ${PREFIX}/bin

RUN set -e ;\
ldd ${PREFIX}/bin/ffmpeg | grep opt/ffmpeg | cut -d ' ' -f 3 | xargs -i cp {} /usr/local/lib/ ; \
cp ${PREFIX}/bin/* /usr/local/bin/ ; \
cp -r ${PREFIX}/share/ffmpeg /usr/local/share/ ; \
LD_LIBRARY_PATH=/usr/local/lib ffmpeg -buildconf

<% if options.minimal %>
RUN set -e ; \
mkdir -p /tmp/fakeroot/lib ; \
cp $(ldd ${PREFIX}/bin/ffmpeg | grep -o '/.\+\.so[^ ]*' | sort | uniq) /tmp/fakeroot/lib ; \
for lib in /tmp/fakeroot/lib/*; do strip --strip-all $lib; done ; \
cp -r ${PREFIX}/bin /tmp/fakeroot/bin/ ; \
cp -r ${PREFIX}/share/ffmpeg /tmp/fakeroot/share/

FROM        scratch AS release

CMD         ["--help"]
ENTRYPOINT  ["/bin/ffmpeg"]
WORKDIR / 

COPY --from=build /tmp/fakeroot/ /

<% else %>

FROM        base

CMD         ["--help"]
ENTRYPOINT  ["ffmpeg"]

ENV         LD_LIBRARY_PATH=/usr/local/lib

COPY --from=build /usr/local /usr/local/

<% end %>

